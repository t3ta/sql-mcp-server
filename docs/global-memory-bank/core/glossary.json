{
  "schema": "memory_document_v2",
  "metadata": {
    "id": "mcp-server-ts-glossary",
    "title": "TypeScript製 MCPサーバー 用語集",
    "documentType": "core",
    "path": "core/mcp-server-ts-glossary.json",
    "tags": [
      "glossary",
      "typescript",
      "mcp",
      "terminology",
      "core"
    ],
    "lastModified": "2025-03-25T00:57:48.325958Z",
    "createdAt": "2025-03-21T08:40:50.132Z",
    "version": 2
  },
  "content": {
    "sections": [
      {
        "title": "概要",
        "content": "このドキュメントでは、TypeScriptで実装されたMCPサーバー（SSHトンネル経由RDS READ対応）に関連する主要な用語と略語を定義します。"
      },
      {
        "title": "主要用語",
        "content": "### MCP (Model Context Protocol)\n大規模言語モデルが外部ツールやリソースと標準的に通信するためのプロトコル。Stdin/Stdoutを通じたJSONメッセージベースの通信が基本。\n\n### Bastion Server (踏み台サーバー)\nプライベートネットワーク内のリソース（RDS等）にアクセスするための中継用サーバー。\n\n### SSHトンネル\n安全なリモートアクセスを提供する仕組みで、MCPサーバーからRDSに踏み台経由でアクセスするために使用される。\n\n### MCPツール (MCP Tool)\nMCPサーバーが提供する「拡張操作」のこと。例として SQLクエリを実行する `query` ツールがある。\n\n### MCPリソース (MCP Resource)\nデータ構造や外部情報ソース（例: データベースのテーブル）を表す抽象オブジェクト。MCPクライアントが参照可能。\n\n### Stdioサーバー\n標準入力/出力を通じてMCP通信を処理する軽量サーバー実装。Node.jsの `process.stdin`, `process.stdout` を通じて動作する。"
      },
      {
        "title": "略語・頭字語",
        "content": "- **MCP**: Model Context Protocol\n- **DB**: Database（データベース）\n- **RDS**: Relational Database Service（AWSのマネージドDB）\n- **SSH**: Secure Shell\n- **CLI**: Command Line Interface\n- **STDIO**: Standard Input / Output\n- **SQL**: Structured Query Language"
      },
      {
        "title": "技術用語",
        "content": "- **pg**: Node.js向けのPostgreSQLクライアントライブラリ\n- **Record<string, any>**: TypeScriptで任意の構造を表現するための汎用オブジェクト型\n- **interface**: TypeScriptにおける型定義のための構文。クラスやオブジェクトの形状を定義するのに用いられる。\n- **Promise**: 非同期処理を扱うためのJavaScript/TypeScriptのオブジェクト"
      },
      {
        "title": "プロジェクト固有の用語",
        "content": "- **mcp/handler.ts**: MCPプロトコルのハンドラをまとめたレイヤー\n- **db/ssh_tunnel.ts**: SSHトンネルを管理し、踏み台経由でRDSへ接続する処理\n- **transport/stdio.ts**: Stdio経由の通信を担当するトランスポート層\n- **types/models.ts**: 共通データ構造を定義するファイル\n- **MCPユースケース**: `ListResources`, `ReadResource`, `CallTool`, `ListTools` の各プロトコル対応処理"
      },
      {
        "title": "関連ドキュメント",
        "content": "- [MCPプロトコル仕様](../03-implementation/mcp-protocol.json)\n- [Stdioサーバー実装](../03-implementation/stdio-server.json)\n- [SSHトンネル管理構成](../07-infrastructure/ssh-tunneling.json)"
      }
    ]
  }
}
